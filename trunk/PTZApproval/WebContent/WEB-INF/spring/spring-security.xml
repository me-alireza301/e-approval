<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security
                         http://www.springframework.org/schema/security/spring-security-3.0.xsd">


	<global-method-security secured-annotations="enabled">
	</global-method-security>

	

	<http auto-config="true" access-denied-page="/denied" >
	
		<intercept-url pattern="/login*" filters="none"/>
		<intercept-url pattern="/**.do" access="ROLE_ACCOUNTANT,ROLE_HOD"  />

		<form-login
				login-page="/login.do" 
				authentication-failure-url="/login.do?error=true" 
				default-target-url="/home.do"/>
	</http>
	
	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<!-- 
	<authentication-manager>
	        <authentication-provider user-service-ref="userService">
	        		<password-encoder ref="passwordEncoder"/>
	        </authentication-provider>
	</authentication-manager>
	 --> 
	 
	<authentication-manager>
	        <authentication-provider user-service-ref="userService">
	        </authentication-provider>
	</authentication-manager>

	<!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
	<!--
	<bean id="userService" class="net.viralpatel.contact.service.UserService"/>-->
	 
</beans:beans>
